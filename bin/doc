#!/bin/python
#
# This sciprt requires python 3 and requests
#
#   Install Requests:
#       sudo pip install requests
#

import sys
import os
import requests

baseUrl = "http://mopey.ndacm.org/api/"

def printCommands():
    print("Doc Terminal Client - Version 1.4\n"
          "------------------------------\n"
          "Available Commands:\n"
          "- s, search [query] : Searches the given query "
          "and provides a prompt to request a result.\n"
          "- q, queue : Prints current queue.\n"
          "- skip: Skips the currently playing song.\n"
          "- play: Resumes playback of queue.\n"
          "- pause: Pauses playback of queue."
    )

def main():
    if len(sys.argv) < 2:
        printCommands()
        exit()
    if sys.argv[1] == "skip":
        print("Skipping Song")
        r = requests.post(baseUrl + "playback/skip")

    elif sys.argv[1] == "search" or sys.argv[1] == "s":
        if len(sys.argv) < 3:
            printCommands()
        else:
            query = ' '.join(sys.argv[2:len(sys.argv)])
            print ("Searching %s" % query)
            r = requests.get(baseUrl + "search/" + query)
            page = 1
            pagination = 20
            finished = False 
            while not finished:
                os.system('clear') 
                subset = r.json()[0+((page-1)*pagination):pagination+((page-1)*pagination)]
                print("Results for %s\n"
                      "Current Page: %s"% (query, page)) 

                for idx,item in enumerate(subset):
                    print("|{0:>2}|: {1}".format(idx+1, item["title"]))
                selection = input("\nOptions: <id>, next, previous, quit\n"
                                  "> ")

                request = None

                if selection == "next":
                    page += 1
                elif selection == "previous" and page > 1:
                    page -= 1
                elif selection == "Quit" or selection == "quit" or selection == "Quit":
                    exit() 
                else:
                    request = subset[int(selection)-1]

                if request:
                    print("Requesting: %s" % request["title"])
                    r = requests.post(baseUrl + "queue/", request)
                    finished = True
    elif sys.argv[1] == "queue" or sys.argv[1] == "q":
        r = requests.get(baseUrl + "queue")
        
        print("Currently Playing: %s" % r.json()["current"])
        for idx,song in enumerate(r.json()["queue"]):
            print("%s: %s" % (idx+1, song["title"]))

    elif sys.argv[1] == "play":
        r = requests.post(baseUrl + "playback/state", data={"state": True})

    elif sys.argv[1] == "pause":
        r = requests.post(baseUrl + "playback/state", data={"state": False})


    elif sys.argv[1] == "help" or sys.argv[1] == "-h" or sys.argv[1] == "--help":
        printCommands()


                

if __name__ == "__main__":
    main()
